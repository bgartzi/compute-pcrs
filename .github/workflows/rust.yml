# Inspired by https://github.com/coreos/repo-templates
name: "Rust"
on:
  pull_request:
    branches:
      - "main"
permissions:
  contents: "read"

# Don't waste job slots on superseded code
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  # Pinned toolchain for linting
  ACTIONS_LINTS_TOOLCHAIN: 1.85.0

jobs:
  tests-stable:
    name: "Tests, stable toolchain"
    runs-on: "ubuntu-24.04"
    container: "ghcr.io/confidential-clusters/compute-pcrs/buildroot:latest"
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5
      - name: "Install toolchain"
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: "Cache build artifacts"
        uses: Swatinem/rust-cache@v2
      - name: "cargo build"
        run: cargo build --all-targets
      - name: "cargo test"
        run: cargo test --all-targets
  tests-release-stable:
    name: "Tests (release), stable toolchain"
    runs-on: "ubuntu-24.04"
    container: "ghcr.io/confidential-clusters/compute-pcrs/buildroot:latest"
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5
      - name: "Install toolchain"
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: "Cache build artifacts"
        uses: Swatinem/rust-cache@v2
      - name: "cargo build (release)"
        run: cargo build --all-targets --release
      - name: "cargo test (release)"
        run: cargo test --all-targets --release
  tests-release-msrv:
    name: "Tests (release), minimum supported toolchain"
    runs-on: "ubuntu-24.04"
    container: "ghcr.io/confidential-clusters/compute-pcrs/buildroot:latest"
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5
      - name: "Detect crate MSRV"
        run: |
          msrv=$(cargo metadata --format-version 1 --no-deps | \
              jq -r '.packages[0].rust_version')
          echo "Crate MSRV: $msrv"
          echo "MSRV=$msrv" >> $GITHUB_ENV
      - name: "Install toolchain"
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.MSRV }}
      - name: "Cache build artifacts"
        uses: Swatinem/rust-cache@v2
      - name: "cargo build (release)"
        run: cargo build --all-targets --release
      - name: "cargo test (release)"
        run: cargo test --all-targets --release
  linting:
    name: "Lints, pinned toolchain"
    runs-on: "ubuntu-24.04"
    container: "ghcr.io/confidential-clusters/compute-pcrs/buildroot:latest"
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5
      - name: "Install toolchain"
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.ACTIONS_LINTS_TOOLCHAIN }}
          components: rustfmt, clippy
      - name: "Cache build artifacts"
        uses: Swatinem/rust-cache@v2
      - name: "cargo fmt (check)"
        run: cargo fmt -- --check -l
      - name: "cargo clippy (warnings)"
        run: cargo clippy --all-targets -- -D warnings
  tests-other-channels:
    name: "Tests, unstable toolchain"
    runs-on: "ubuntu-24.04"
    container: "ghcr.io/confidential-clusters/compute-pcrs/buildroot:latest"
    continue-on-error: true
    strategy:
      matrix:
        channel: [beta, nightly]
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5
      - name: "Install toolchain"
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.channel }}
      - name: "Cache build artifacts"
        uses: Swatinem/rust-cache@v2
      - name: "cargo build"
        run: cargo build --all-targets
      - name: "cargo test"
        run: cargo test --all-targets
  tests-integration-just-stable:
    name: "Integration Tests, just"
    runs-on: "ubuntu-24.04"
    container:
      image: "ghcr.io/confidential-clusters/compute-pcrs/buildroot:latest"
      options: "--privileged"
    strategy:
      matrix:
        target-image-url:
          - "https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/42.20250705.3.0/x86_64/fedora-coreos-42.20250705.3.0-ostree.x86_64.ociarchive"
          - "https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/4.19/4.19.0/rhcos-4.19.0-x86_64-ostree.x86_64.ociarchive"
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5
      - name: "Clone reference-values"
        uses: actions/checkout@v5
        with:
          repository: confidential-clusters/reference-values
          path: test-data
      - name: "Install toolchain"
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: "Cache build artifacts"
        uses: Swatinem/rust-cache@v2
      - name: "Run just tests"
        run: just --set image ${{ matrix.target-image-url }} -vvv $(just -l | grep -E "^ *test-.*$" | grep -v uki)
